// Generated by view binder compiler. Do not edit!
package br.com.zup.marvel.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import br.com.zup.marvel.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnRegisterAccount;

  @NonNull
  public final EditText etEmailRegister;

  @NonNull
  public final EditText etNameRegister;

  @NonNull
  public final EditText etPasswordRegister;

  private ActivityRegisterBinding(@NonNull ScrollView rootView, @NonNull Button btnRegisterAccount,
      @NonNull EditText etEmailRegister, @NonNull EditText etNameRegister,
      @NonNull EditText etPasswordRegister) {
    this.rootView = rootView;
    this.btnRegisterAccount = btnRegisterAccount;
    this.etEmailRegister = etEmailRegister;
    this.etNameRegister = etNameRegister;
    this.etPasswordRegister = etPasswordRegister;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRegisterAccount;
      Button btnRegisterAccount = ViewBindings.findChildViewById(rootView, id);
      if (btnRegisterAccount == null) {
        break missingId;
      }

      id = R.id.etEmailRegister;
      EditText etEmailRegister = ViewBindings.findChildViewById(rootView, id);
      if (etEmailRegister == null) {
        break missingId;
      }

      id = R.id.etNameRegister;
      EditText etNameRegister = ViewBindings.findChildViewById(rootView, id);
      if (etNameRegister == null) {
        break missingId;
      }

      id = R.id.etPasswordRegister;
      EditText etPasswordRegister = ViewBindings.findChildViewById(rootView, id);
      if (etPasswordRegister == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ScrollView) rootView, btnRegisterAccount, etEmailRegister,
          etNameRegister, etPasswordRegister);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
